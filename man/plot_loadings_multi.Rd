% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plot_loadings_multi}
\alias{plot_loadings_multi}
\title{Plot multiple factor loadings in one plot.}
\usage{
plot_loadings_multi(fa_objects, fa_labels, reverse_vector = NA,
  reorder = "mean")
}
\arguments{
\item{fa_objects}{(list of fa-class objects) Factor analyses objects from the fa() function from the \code{\link{psych}} package.}

\item{fa_labels}{(chr vector) Names of the analyses. Defaults to fa.1, fa.2, etc..}

\item{reverse_vector}{(num vector) Vector of numbers to use for reversing factors. Use e.g. c(1, -1) to reverse the second factor. Defaults not reversing.}

\item{reorder}{(chr scalar or NA) Which factor analysis to order the loadings by. Can be integers that reprensent each factor analysis. Can also be "mean", "median" to use the means and medians of the loadings. Use "all" for the old method. Default = "mean".}
}
\description{
Returns a ggplot2 plot with sorted loadings colored by the analysis they belong to. Supports reversing Ã³f any factors that are reversed. Dodges to avoid overplotting. Only works for factor analyses with 1 factor solutions!
}
\details{
Non-overlapping indicates are put in the bottom. Note that internally, x and y coods have been flipped, so to modify the scales, use the opposite command, e.g. ylim to modify x axis limits.
}
\examples{
library(psych)
plot_loadings_multi(fa(iris[-5])) #extract a factor and plot
#list of FAs
fa_list2 = list(part1 = fa(iris[1:50, -c(1, 5)]),
                part2 = fa(iris[51:100, -c(2, 5)]),
                part3 = fa(iris[101:150, -c(3, 5)]))
#notice that it handles non-overlapping indicators
plot_loadings_multi(fa_list2)
#reorder by a particular FA
plot_loadings_multi(fa_list2, reorder = 1)
}

