% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{GG_text}
\alias{GG_text}
\title{Add text to a ggplot}
\usage{
GG_text(text, text_pos = "tl", font_size = 11, font_color = "black", ...)
}
\arguments{
\item{text}{(chr) A character scalar with text to use.}

\item{text_pos}{(chr) An abbreviation of the easy placement to use. If you want to set these manually, use "manual".}

\item{font_size}{(int) Font size.}

\item{font_color}{(various) Font color. Can be of various types, see details.}

\item{...}{Extra arguments passed to various functions, see details.}
}
\value{
The outfrom from \code{\link[ggplot:annotation_custom]{ggplot::annotation_custom()}}.
}
\description{
Convenient function to add text to a ggplot object
}
\details{
Builds a grob using \code{\link[grid:grobTree]{grid::grobTree()}} and \code{\link[grid:textGrob]{grid::textGrob()}}. This text can then be positioned wherever the user wants it. It is more convenient than using \code{\link[ggplot:geom_text]{ggplot::geom_text()}} because positioning is difficult to get right with that as it depends on the data ranges. This function instead uses fractional positioning, e.g. .95 is the 95th centile of x/y, whatever that happens to be in the data. On top of this, 6 premade positions are made for common placements: top/bottom left/middle/right abbreviated as tl, tm, tr, bl, bm, br, respectively.
}
\examples{
#make a plot with a point at 0,0, and large red text in middle
ggplot(data_frame(x = 0, y = 0), aes(x, y)) +
  geom_point() +
  GG_text("red test", text_pos = "mm", font_color = "red", font_size = 20)

#manually making the text position
ggplot(data_frame(x = 0, y = 0), aes(x, y)) +
  geom_point() +
  GG_text("blue test", text_pos = "manual", font_color = "blue", font_size = 20, x = .25, y = .75)
}
