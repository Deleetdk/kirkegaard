% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/political_units.R
\name{pu_translate}
\alias{pu_translate}
\title{Translate between names of units and abbreviations}
\usage{
pu_translate(x, superunit, fuzzy = T, reverse = F, lang = "en",
  superunit_recursive = F, messages = 1, stringdist_params,
  standardize_name = F)
}
\arguments{
\item{x}{(chr vectr) A chr vector of names to abbreviate.}

\item{superunit}{(chr vectr) Optional. A superunit whose subunits are the only ones being considered. Set to "world" if only sovereign countries are desired.}

\item{fuzzy}{(lgl scalr) Whether to use fuzzy matching if no exact match exists.}

\item{reverse}{(lgl scalr) Whether to translate from abbreviations to names.}

\item{lang}{(chr scalr) If translating back to names, which language to use. Default en=English.}

\item{superunit_recursive}{(lgl scalr) Whether to also include subunits of subunits. Default no.}

\item{messages}{(num scalr) Whether to give helpful messages. 0 = none, 1 = some, 2 = lots. Default 1.}

\item{stringdist_params}{(list) If using fuzzy matching, a list of parameters to pass to stringdist function.}

\item{standardize_name}{(lgl scalr) If true, will translate names to abbreviations, and then back to names. This converts the names to the standard version in the dataset.}
}
\value{
Returns a character vector.
}
\description{
Convert names of political units to standardized abbreviations or convert standardized abbreviations to names.
}
\examples{
pu_translate("DNK", reverse = T)
}
