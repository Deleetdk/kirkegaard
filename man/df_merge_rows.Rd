% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_frame_functions.R
\name{df_merge_rows}
\alias{df_merge_rows}
\title{Merge rows in data.frame.}
\usage{
df_merge_rows(data, key = NULL, names = NULL, new_name = NULL,
  func = purrr::partial(sum, na.rm = T), numeric = T, ...)
}
\arguments{
\item{data}{(data.frame or matrix) The data object.}

\item{key}{(character scalar) The name of the key variable, which is the variable to merge rows by. If given ".rownames", then it will use the rownames.}

\item{names}{(character vector) The rownames to merge.}

\item{new_name}{(character scalar) The new rownames to use. Defaults to the first member of the names parameter.}

\item{func}{(function) The function to use. Note that if you set numeric = FALSE, then the function must be able to handle non-numeric data.}

\item{numeric}{(logical scalar) Whether to apply the function only to the numeric columns.
... Other parameters passed to func.}
}
\description{
Find blocks of rows with a matching key or rowname, and merge them using a given function.
}
\details{
In a variety of circumstances it is useful to merge several rows of data into a single row. For instance, if one dataset uses covers the same data but one uses a smaller unit than the other, then one may want to merge the smaller units so they correspond to the larger units. Alternative, if one has saved data for one unit under two different names by accident, one wants to merge these two (or more) rows without losing data.
}
\examples{
#suppse you had a data.frame with data for multiple variables
#but accidentally, one observation was given two names, "C" and "D".
#and data has been dispersed among the rows
#we can move all the data into one row without data loss.
t = data.frame(X = c(1, 2, 3, NA), Y = c(1, 2, NA, 3));rownames(t) = LETTERS[1:4]
t
#here the real values for the C observation are both 3, but it has accidentally been called "D".
df_merge_rows(t, names = c("C", "D"), func = mean)
#suppose instead we have the names to match in a column, we can use the key parameter.
t = data.frame(large_unit = c("a", "a", "b", "b", "c"), value = 1:5)
t
df_merge_rows(t, "large_unit") #rows merged by sum by default
df_merge_rows(t, "large_unit", func = mean) #rows merged by mean
}

