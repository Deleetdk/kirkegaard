% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_frame_functions.R
\name{df_colFunc}
\alias{df_colFunc}
\title{Apply function to columns of a data.frame}
\usage{
df_colFunc(
  data,
  func,
  indices = NULL,
  pattern = NULL,
  pattern_inverse = F,
  keep_unselected = T,
  ...
)
}
\arguments{
\item{data}{(an object) An object whose colnames should be changed}

\item{func}{(function) A function to apply.}

\item{indices}{(chr, num, log vector) Either a character, numeric or logical vector used to select columns.}

\item{pattern}{(chr sclr) A regex pattern used to match column names.}

\item{pattern_inverse}{(chr sclr) Whether to invert the match via regex pattern. Default=F.}

\item{keep_unselected}{(log sclr) Whether to keep the unselected columns. Default=T.}

\item{...}{Other parameters passed to func.}
}
\description{
Apply functions to columns of a data.frame. This can be done selectively using colnames, logical indicates, integer indices or regex patterns. One can also pass extra arguments to the function. By default, the unselected columns are kept.
}
\examples{
#notice original numbers
head(iris)
multiply_by_zero = function(x) return(x*0) #auxiliary function
#using regex
head(df_colFunc(iris, func = multiply_by_zero, pattern = "Length"))
#using inverse regex
head(df_colFunc(iris, func = multiply_by_zero, pattern = "Species", pattern_inverse = T))
#using integer indices
head(df_colFunc(iris, func = multiply_by_zero, indices = 2:3))
#using logical indices
head(df_colFunc(iris, func = multiply_by_zero, indices = c(T, F, T, F, F)))
#using characters
head(df_colFunc(iris, func = multiply_by_zero, indices = c("Sepal.Length", "Petal.Width")))
#removing unselected columns
head(df_colFunc(iris, func = multiply_by_zero, pattern = "Length", keep_unselected = F))
#select all by not providing any selector
str(df_colFunc(iris, func = as.character)) #all have been changed to chr
}
